import { NextRequest, NextResponse } from "next/server";
import { Resend } from "resend";

const resend = new Resend(process.env.RESEND_API_KEY);

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { email, packingList, tripContext } = body;

    // Validate email
    if (!email || !email.includes("@")) {
      return NextResponse.json(
        { error: "Valid email is required" },
        { status: 400 }
      );
    }

    if (!packingList || !Array.isArray(packingList)) {
      return NextResponse.json(
        { error: "Invalid packing list format" },
        { status: 400 }
      );
    }

    // Group items by category
    const categories = packingList.reduce((acc: any, item: any) => {
      const category = item.category || "Other";
      if (!acc[category]) acc[category] = [];
      acc[category].push(item);
      return acc;
    }, {});

    // Build HTML email
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Your Packing List from Packmind AI</title>
</head>
<body style="margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f5f5f5;">
  <table width="100%" cellpadding="0" cellspacing="0" style="background-color: #f5f5f5; padding: 20px;">
    <tr>
      <td align="center">
        <table width="600" cellpadding="0" cellspacing="0" style="background-color: #ffffff; border-radius: 10px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
          
          <!-- Header -->
          <tr>
            <td style="background: linear-gradient(135deg, #9333ea 0%, #ec4899 50%, #3b82f6 100%); padding: 40px 30px; text-align: center;">
              <h1 style="color: #ffffff; margin: 0; font-size: 28px; font-weight: bold;">Packmind AI</h1>
              <p style="color: #ffffff; margin: 10px 0 0 0; font-size: 14px;">Your Intelligent Packing Assistant</p>
            </td>
          </tr>

          <!-- Trip Context -->
          <tr>
            <td style="padding: 30px;">
              <h2 style="color: #1f2937; margin: 0 0 10px 0; font-size: 20px;">Your Trip</h2>
              <p style="color: #6b7280; margin: 0; font-size: 14px; line-height: 1.6;">${
                tripContext || "Your upcoming adventure"
              }</p>
            </td>
          </tr>

          <!-- Packing List -->
          <tr>
            <td style="padding: 0 30px 30px 30px;">
              <h2 style="color: #1f2937; margin: 0 0 20px 0; font-size: 20px;">Your Packing List</h2>
              
              ${Object.entries(categories)
                .map(
                  ([category, items]: [string, any]) => `
                <div style="margin-bottom: 25px;">
                  <h3 style="color: #9333ea; margin: 0 0 12px 0; font-size: 16px; font-weight: bold; border-bottom: 2px solid #9333ea; padding-bottom: 5px;">${category}</h3>
                  
                  ${items
                    .map(
                      (item: any) => `
                    <div style="margin-bottom: 12px; padding: 12px; background-color: #f9fafb; border-radius: 6px;">
                      <div style="display: flex; align-items: start;">
                        <div style="width: 16px; height: 16px; border: 2px solid #9333ea; border-radius: 3px; margin-right: 10px; margin-top: 2px;"></div>
                        <div>
                          <p style="margin: 0; font-weight: bold; color: #1f2937; font-size: 14px;">${
                            item.item_name
                          }</p>
                          <p style="margin: 5px 0 0 0; color: #6b7280; font-size: 13px; line-height: 1.4;">${
                            item.description || ""
                          }</p>
                        </div>
                      </div>
                    </div>
                  `
                    )
                    .join("")}
                </div>
              `
                )
                .join("")}
            </td>
          </tr>

          <!-- CTA -->
          <tr>
            <td style="padding: 0 30px 30px 30px; text-align: center;">
              <a href="https://packmind.ai" style="display: inline-block; background-color: #9333ea; color: #ffffff; text-decoration: none; padding: 12px 30px; border-radius: 6px; font-weight: bold; font-size: 14px;">Create Another List</a>
            </td>
          </tr>

          <!-- Footer -->
          <tr>
            <td style="background-color: #f9fafb; padding: 20px 30px; text-align: center; border-top: 1px solid #e5e7eb;">
              <p style="margin: 0; color: #6b7280; font-size: 12px;">
                Generated by <a href="https://packmind.ai" style="color: #9333ea; text-decoration: none;">Packmind AI</a>
              </p>
              <p style="margin: 5px 0 0 0; color: #9ca3af; font-size: 11px;">
                Safe travels! ‚úàÔ∏è
              </p>
            </td>
          </tr>

        </table>
      </td>
    </tr>
  </table>
</body>
</html>
    `;

    // Send email via Resend
    const data = await resend.emails.send({
      from: "Packmind AI <noreply@packmind.ai>",
      to: [email],
      subject: `Your Packing List for ${tripContext || "Your Trip"}`,
      html: htmlContent,
    });

    return NextResponse.json({
      success: true,
      messageId: data.id,
      message: "Email sent successfully",
    });
  } catch (error: any) {
    console.error("Email sending error:", error);
    return NextResponse.json(
      { error: "Failed to send email", details: error.message },
      { status: 500 }
    );
  }
}

// app/api/email-list/route.ts
import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const { email, name, listUrl } = await request.json();

    if (!email || !listUrl) {
      return NextResponse.json(
        { error: 'Email and list URL required' },
        { status: 400 }
      );
    }

    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return NextResponse.json(
        { error: 'Invalid email address' },
        { status: 400 }
      );
    }

    // TODO: Integrate with email service (Resend, SendGrid, etc.)
    // For now, log and return success
    console.log('Email would be sent:', {
      to: email,
      name,
      listUrl,
    });

    // In production, use an email service:
    /*
    const resendApiKey = process.env.RESEND_API_KEY;
    
    await fetch('https://api.resend.com/emails', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${resendApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        from: 'PackMind AI <hello@packmind.ai>',
        to: [email],
        subject: `Your Packing List - ${name}`,
        html: generateEmailHTML(name, listUrl),
      }),
    });
    */

    return NextResponse.json({
      success: true,
      message: 'Email sent successfully',
    });
  } catch (error) {
    console.error('Email send error:', error);
    return NextResponse.json(
      { error: 'Failed to send email' },
      { status: 500 }
    );
  }
}

function generateEmailHTML(name: string, listUrl: string): string {
  return `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Your Packing List</title>
</head>
<body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
  <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; border-radius: 10px 10px 0 0;">
    <h1 style="color: white; margin: 0; font-size: 28px;">üéí Your Packing List is Ready!</h1>
  </div>
  
  <div style="background: #f9fafb; padding: 30px; border-radius: 0 0 10px 10px;">
    <p style="font-size: 16px; margin-bottom: 20px;">Hi ${name},</p>
    
    <p style="font-size: 16px; margin-bottom: 20px;">
      Your personalized packing list has been saved and is ready to access anytime!
    </p>
    
    <div style="text-align: center; margin: 30px 0;">
      <a href="${listUrl}" 
         style="background: #667eea; color: white; padding: 15px 40px; text-decoration: none; border-radius: 8px; display: inline-block; font-weight: bold; font-size: 16px;">
        View Your List
      </a>
    </div>
    
    <p style="font-size: 14px; color: #6b7280; margin-top: 30px;">
      üí° <strong>Pro Tip:</strong> Bookmark this link so you can access your list on any device!
    </p>
    
    <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;" />
    
    <p style="font-size: 12px; color: #9ca3af; text-align: center;">
      Created with ‚ù§Ô∏è by PackMind AI<br />
      <a href="https://packmind.ai" style="color: #667eea;">packmind.ai</a>
    </p>
  </div>
</body>
</html>
`;
}